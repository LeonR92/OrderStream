version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    platform: linux/arm64
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka1:
    image: confluentinc/cp-kafka:7.3.0
    platform: linux/arm64
    container_name: kafka1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 3

  kafka2:
    image: confluentinc/cp-kafka:7.3.0
    platform: linux/arm64
    container_name: kafka2
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 3

  kafka3:
    image: confluentinc/cp-kafka:7.3.0
    platform: linux/arm64
    container_name: kafka3
    ports:
      - "9094:9094"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29094,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 3

  kafka-init:
    image: confluentinc/cp-kafka:7.3.0
    platform: linux/arm64
    container_name: kafka-init
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    command: >
      bash -c "
        echo 'Waiting for Kafka to be ready...' &&
        sleep 30 &&
        kafka-topics --bootstrap-server kafka1:29092 --create --if-not-exists --topic item-events --partitions 3 --replication-factor 1 &&
        echo 'Created topics'"
    environment:
      KAFKA_BROKER_ID: 999
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    platform: linux/arm64
    container_name: kafka-ui
    ports:
      - "8080:8080"
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - kafka-init
    environment:
      KAFKA_CLUSTERS_0_NAME: local-kafka-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:29092,kafka2:29093,kafka3:29094
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  postgres:
    image: postgres:15-alpine
    platform: linux/arm64
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: itemsdb
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  flask-backend:
    build:
      context: ./flask-backend
      dockerfile: Dockerfile
    platform: linux/arm64
    container_name: flask-backend
    ports:
      - "5001:5000"
    environment:
      DATABASE_URI: postgresql://postgres:postgres@postgres:5432/itemsdb
      KAFKA_BOOTSTRAP_SERVERS: kafka1:29092,kafka2:29093,kafka3:29094
      KAFKA_TOPIC: item-events
    depends_on:
      - postgres
      - kafka1
      - kafka2
      - kafka3
    volumes:
      - ./flask-backend:/app

  kafka-consumer:
    build:
      context: ./kafka-consumer
      dockerfile: Dockerfile
    platform: linux/arm64
    container_name: kafka-consumer
    ports:
      - "5002:5002"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka1:29092,kafka2:29093,kafka3:29094
      KAFKA_TOPIC: item-events
      KAFKA_GROUP_ID: item-consumer-group
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    volumes:
      - ./kafka-consumer:/app

volumes:
  postgres-data: